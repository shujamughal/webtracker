a@model WebTracker.Models.Website
@{
    ViewData["Title"] = "Website Details";
}


<!-- Main content -->

<div class="row">
    <div class="col-md-6">
        <!-- DONUT CHART -->
        <div class="card card-danger">
            <div class="card-header">
            <h3 class="card-title">Visited From Browsers</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i>
                </button>
            </div>
            </div>
            <div class="card-body">
            <canvas id="donutChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
    <div class="col-md-6">
        <!-- PIE CHART -->
        <div class="card card-danger">
            <div class="card-header">
            <h3 class="card-title">Visited From Devices</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i>
                </button>
            </div>
            </div>
            <div class="card-body">
            <canvas id="pieChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>



<!-- Website Details-->
<div class="row">
<div class="col-12">
    <div class="card">
    <div class="card-header">
        <h3 class="card-title">Websites Being Tracked</h3>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <table id="websitesDetails" class="table table-bordered table-striped">
            <thead>
            <tr>
                <th>Sr.</th>
                <th>Flows</th>
            </tr>
            </thead>
            <tbody>
                @{
                    int sr = 1;
                }
            @foreach (var user in Model.Users){
                @foreach (var flow in user.Flows)
                {
                    <tr>
                        <td>
                            <a asp-controller = "AdminLte" asp-action = "FlowDetails" asp-route-id = "@flow.FlowId">@sr</a>
                            @{sr++;}
                        </td>
                        <td>
                            @foreach (var url in flow.Urls)
                            {
                                <a asp-controller = "AdminLte" asp-action = "UrlDetails" asp-route-id = "@url.UrlId">@url.WebUrl</a>
                            }
                        </td>
                        @* <td>
                            <button asp-controller = "AdminLte" asp-action = "FlowDetails" asp-route-id = "@flow.FlowId">
                                Flow Details
                            </button>
                        </td> *@
                        
                    </tr>   
                }
            }
            </tbody>
        </table>
    </div>
    <!-- /.card-body -->
    </div>
</div>
</div>
<!-- /.row -->

@section scripts {
    <script>
        $(function () {

        /* ChartJS
        * -------
        * Here we will create a few charts using ChartJS
        */
        let websiteName = '@Model.Web';
        @* await $.ajax({
            type: "GET",
            async: false,
            url: "@Url.Action("GetWebsiteByName", "AdminLte")",
            DataType: "text",
            data: {name: websiteName},
            success: function(result){
            website = JSON.parse(result);
            },
            error: function(req, status, error){
            console.log(req, status, error);
            }
        }).then(response => console.log("response: " + response)).catch(error => console.log("error: " + error)); *@
        //console.log("website", website);



        // get browser data
        var browsers = [0, 0, 0, 0, 0, 0];
        @foreach (var user in Model.Users){

            @if(user.Browser == "chrome"){
                @:browsers[0]++;
            }
            else if(user.Browser == "edge"){
                @:browsers[1]++;
            }
            else if(user.Browser == "firefox"){
                @:browsers[2]++;
            }
            else if(user.Browser == "safari"){
                @:browsers[3]++;
            }
            else if(user.Browser == "opera"){
                @:browsers[4]++;
            }
            else if(user.Browser == "No browser detection"){
                @:browsers[5]++;
            }
        }

        
        let devices = [0, 0, 0, 0];
        @foreach (var user in Model.Users){ 
            
            @if(user.DeviceType == "desktop") {
            @:devices[0]++;
            } else if (user.DeviceType == "mobile") {
            @:devices[1]++;
            } else if (user.DeviceType == "tablet") {
            @:devices[2]++;
            } else {
            @:devices[3]++;
            }
        }

        //-------------
        //- DONUT CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
        var donutData        = {
            labels: [
                'Chrome', 
                'Microsoft Edge',
                'FireFox', 
                'Safari', 
                'Opera', 
                'Other', 
            ],
            datasets: [
            {
                data: browsers,
                backgroundColor : ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],
            }
            ]
        }
        var donutOptions     = {
            maintainAspectRatio : false,
            responsive : true,
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        var donutChart = new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions      
        })

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
        var pieData        = {
            labels: [
                'Desktop', 
                'Mobile',
                'Tablet',
                'Other',
            ],
            datasets: [
            {
                data: devices,
                backgroundColor : ['#00c0ef', '#f56954', '#00a65a', '#d2d6de'],
            }
            ]
        }
        var pieOptions     = {
            maintainAspectRatio : false,
            responsive : true,
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        var pieChart = new Chart(pieChartCanvas, {
            type: 'pie',
            data: pieData,
            options: pieOptions      
        });
        {($('#websitesDetails')).DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
        });
        }
        });
    </script>
}
              